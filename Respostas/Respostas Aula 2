Quais as diferenças entre os barramentos de dados e de endereços?
R: Barramento de dados é um barramento que so permite o envio ou recebimento de dados
Barramento de endereços recebe ou envia somente endereços de memória

Quais são as diferenças entre as memórias RAM e ROM?
R: Memórias ROM são memórias na voláteis, apenas de leitura. Memórias do tipo RAM são memorias que guardam informação enquanto está funcionando, quando retira-se a alimentação perde-se as informações.

Considere o código abaixo:

#include <stdio.h>
int main(void)
{
	int i;
	printf("Insira um número inteiro: ");
	scanf("%d", &i);
	if(i%2)
		printf("%d eh impar.\n");
	else
		printf("%d eh par.\n");
	return 0;
}
Para este código, responda: (a) A variável i é armazenada na memória RAM ou ROM? Por quê? (b) O programa compilado a partir deste código é armazenado na memória RAM ou ROM? Por quê?
(a)R: RAM, por que a ROM é uma memoria de leitura apenas, não sendo possível um programa escrever um dado nela.

(b)R: ROM, por que o executável do programa tem que ficar salvo para que possa ser aberto em uma proxima vez.


Quais são as diferenças, vantagens e desvantagens das arquiteturas Harvard e Von Neumann?
R: Harvard tem memoria ROM, CPU e RAM de formas separadas porem as memorias RAM e ROM podem ser acessadas de forma simultanea
Von Neumann: possui apenas um barramento de acesso as memorias portanto para acessar a RAM e ROM tem que ser feito o acesso a uma memoria depois acessar outra


Considere a variável inteira i, armazenando o valor 0x8051ABCD. Se i é armazenada na memória a partir do endereço 0x0200, como ficam este byte e os seguintes, considerando que a memória é: (a) Little-endian; (b) Big-endian.
(a)Little Endian-> 0x0200 - CD
                  0x0201 - AB
                  0x0202 - 51
                  0x0203 - 80
(b)Big Endian --> 0x0200 - 80
                  0x0201 - 51
                  0x0202 - AB
                  0x0203 - CD

Sabendo que o processador do MSP430 tem registradores de 16 bits, como ele soma duas variáveis de 32 bits?
R: Somar de 2 em 2 bits e caso haja carry deve-se adicionar mais um bit na próxima soma e assim fazer ate somar todos os bits das variaveis.
